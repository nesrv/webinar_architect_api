import requests
import json

# URL JSON-RPC API
API_URL = "http://localhost:5000/api"

def call_method(method, params=None):
    """–í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ JSON-RPC API"""
    headers = {'Content-Type': 'application/json'}
    payload = {
        "jsonrpc": "2.0",
        "method": method,
        "params": params or {},
        "id": 1
    }
    
    response = requests.post(API_URL, json=payload, headers=headers)
    return response.json()

def print_response(response):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞"""
    if "result" in response:
        result = response["result"]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
        if "error" in result:
            print(f"\n‚ùå {result['error']}")
            if "message" in result:
                print(f"‚ÑπÔ∏è {result['message']}")
            return
        
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if "message" in result:
            print(f"\n‚úâÔ∏è {result['message']}")
        
        # –í—ã–≤–æ–¥–∏–º –ø–æ–¥—Å–∫–∞–∑–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if "hint" in result:
            print(f"\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: {result['hint']}")
        
        # –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if "attempts" in result:
            print(f"üî¢ –ü–æ–ø—ã—Ç–æ–∫: {result['attempts']}")
        
        # –í—ã–≤–æ–¥–∏–º ID –∏–≥—Ä—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if "game_id" in result:
            print(f"üéÆ ID –∏–≥—Ä—ã: {result['game_id']}")
            
        # –í—ã–≤–æ–¥–∏–º —Å–ª–æ–∂–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if "difficulty" in result:
            difficulties = {
                "easy": "–õ–µ–≥–∫–∞—è",
                "normal": "–ù–æ—Ä–º–∞–ª—å–Ω–∞—è",
                "hard": "–°–ª–æ–∂–Ω–∞—è"
            }
            print(f"‚öôÔ∏è –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulties.get(result['difficulty'], result['difficulty'])}")
            
        # –í—ã–≤–æ–¥–∏–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ø—ã—Ç–æ–∫, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if "history" in result:
            if result["history"]:
                print(f"\nüìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫: {', '.join(map(str, result['history']))}")
            else:
                print("\nüìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ø—ã—Ç–æ–∫ –ø—É—Å—Ç–∞")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞:")
        print(json.dumps(response.get("error", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"), indent=2, ensure_ascii=False))

def main_menu():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã"""
    current_game = None
    
    while True:
        print("\n===== –ò–ì–†–ê '–£–ì–ê–î–ê–ô –ß–ò–°–õ–û' =====")
        
        if current_game:
            print(f"üéÆ –¢–µ–∫—É—â–∞—è –∏–≥—Ä–∞: {current_game}")
            print("\n1. –°–¥–µ–ª–∞—Ç—å –ø–æ–ø—ã—Ç–∫—É")
            print("2. –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É")
            print("3. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
            print("4. –°–¥–∞—Ç—å—Å—è")
            print("5. –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")
            print("0. –í—ã—Ö–æ–¥")
        else:
            print("\n1. –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")
            print("0. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é: ")
        
        if not current_game and choice == "1":
            # –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
            print("\n--- –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å ---")
            print("1. –õ–µ–≥–∫–∞—è (1-50)")
            print("2. –ù–æ—Ä–º–∞–ª—å–Ω–∞—è (1-100)")
            print("3. –°–ª–æ–∂–Ω–∞—è (1-200)")
            
            difficulty_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å: ")
            
            if difficulty_choice == "1":
                difficulty = "easy"
            elif difficulty_choice == "2":
                difficulty = "normal"
            elif difficulty_choice == "3":
                difficulty = "hard"
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å")
                difficulty = "normal"
                
            response = call_method("start_game", {"difficulty": difficulty})
            print_response(response)
            
            if "result" in response and "game_id" in response["result"]:
                current_game = response["result"]["game_id"]
                
        elif current_game and choice == "1":
            # –°–¥–µ–ª–∞—Ç—å –ø–æ–ø—ã—Ç–∫—É
            try:
                guess = int(input("\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
                response = call_method("guess", {"game_id": current_game, "number": guess})
                print_response(response)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞
                if "result" in response and "status" in response["result"] and response["result"]["status"] == "won":
                    print("\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!")
                    play_again = input("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ")
                    if play_again.lower() in ["–¥–∞", "–¥", "yes", "y"]:
                        current_game = None
                    else:
                        return
            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")
                
        elif current_game and choice == "2":
            # –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
            response = call_method("get_hint", {"game_id": current_game})
            print_response(response)
            
        elif current_game and choice == "3":
            # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            response = call_method("game_stats", {"game_id": current_game})
            print_response(response)
            
        elif current_game and choice == "4":
            # –°–¥–∞—Ç—å—Å—è
            response = call_method("give_up", {"game_id": current_game})
            print_response(response)
            
            play_again = input("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ")
            if play_again.lower() in ["–¥–∞", "–¥", "yes", "y"]:
                current_game = None
            else:
                return
                
        elif (current_game and choice == "5") or (not current_game and choice == "1"):
            # –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É
            print("\n--- –í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å ---")
            print("1. –õ–µ–≥–∫–∞—è (1-50)")
            print("2. –ù–æ—Ä–º–∞–ª—å–Ω–∞—è (1-100)")
            print("3. –°–ª–æ–∂–Ω–∞—è (1-200)")
            
            difficulty_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å: ")
            
            if difficulty_choice == "1":
                difficulty = "easy"
            elif difficulty_choice == "2":
                difficulty = "normal"
            elif difficulty_choice == "3":
                difficulty = "hard"
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å")
                difficulty = "normal"
                
            response = call_method("start_game", {"difficulty": difficulty})
            print_response(response)
            
            if "result" in response and "game_id" in response["result"]:
                current_game = response["result"]["game_id"]
            
        elif choice == "0":
            print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main_menu()